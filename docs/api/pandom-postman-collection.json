{
  "info": {
    "name": "Pandom Stack API",
    "description": "Complete API collection for Pandom Stack - Security-First Application Boilerplate with cookie-based authentication",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_uuid",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "description": "Authentication and authorization endpoints with cookie-based auth",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data) {",
                  "        pm.collectionVariables.set('user_uuid', response.data.user.uuid);",
                  "        console.log('User UUID saved:', response.data.user.uuid);",
                  "        console.log('Login successful - cookies will be automatically sent');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\",\n  \"password\": \"{{test_user_password}}\",\n  \"rememberMe\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Check Auth Status",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/check",
              "host": ["{{base_url}}"],
              "path": ["auth", "check"]
            }
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["auth", "logout"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"verification-token\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/verify",
              "host": ["{{base_url}}"],
              "path": ["auth", "verify"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "forgot-password"]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"otp\": \"123456\",\n  \"password\": \"{{test_user_password}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["auth", "reset-password"]
            }
          },
          "response": []
        },
        {
          "name": "Resend Verification",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_user_email}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/resend-verification",
              "host": ["{{base_url}}"],
              "path": ["auth", "resend-verification"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Profile",
      "description": "User profile management endpoints",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/profile",
              "host": ["{{base_url}}"],
              "path": ["profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tags\": [\"developer\", \"backend\", \"typescript\"],\n  \"metadata\": {\n    \"preferences\": {\n      \"theme\": \"dark\",\n      \"language\": \"en\"\n    },\n    \"bio\": \"Full-stack developer\",\n    \"location\": \"Milan, Italy\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/profile",
              "host": ["{{base_url}}"],
              "path": ["profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Security",
      "description": "Security monitoring and GDPR compliance endpoints",
      "item": [
        {
          "name": "Get Security Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/security/logs?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["security", "logs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Active Sessions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/security/sessions",
              "host": ["{{base_url}}"],
              "path": ["security", "sessions"]
            }
          },
          "response": []
        },
        {
          "name": "Terminate Session",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/security/sessions/session-uuid",
              "host": ["{{base_url}}"],
              "path": ["security", "sessions", "session-uuid"]
            }
          },
          "response": []
        },
        {
          "name": "Terminate All Other Sessions",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/security/sessions/others",
              "host": ["{{base_url}}"],
              "path": ["security", "sessions", "others"]
            }
          },
          "response": []
        },
        {
          "name": "Request Data Export",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/security/download-data",
              "host": ["{{base_url}}"],
              "path": ["security", "download-data"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"confirmation\": \"DELETE_MY_ACCOUNT\",\n  \"reason\": \"No longer need the service\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/security/delete-account",
              "host": ["{{base_url}}"],
              "path": ["security", "delete-account"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin",
      "description": "Administrative endpoints (admin role required)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get All Users with Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users?page=1&limit=10&search=john",
              "host": ["{{base_url}}"],
              "path": ["admin", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "search",
                  "value": "john"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/users/{{user_uuid}}",
              "host": ["{{base_url}}"],
              "path": ["admin", "users", "{{user_uuid}}"]
            }
          },
          "response": []
        },
        {
          "name": "Get System Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/metrics",
              "host": ["{{base_url}}"],
              "path": ["admin", "metrics"]
            }
          },
          "response": []
        },
        {
          "name": "Get Detailed Metrics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/metrics/detailed",
              "host": ["{{base_url}}"],
              "path": ["admin", "metrics", "detailed"]
            }
          },
          "response": []
        },
        {
          "name": "Get Audit Logs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/admin/audit-logs?page=1&limit=50",
              "host": ["{{base_url}}"],
              "path": ["admin", "audit-logs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "System",
      "description": "System health and monitoring endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/resilience/status",
              "host": ["{{base_url}}"],
              "path": ["resilience", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Create Backup",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/resilience/backup",
              "host": ["{{base_url}}"],
              "path": ["resilience", "backup"]
            }
          },
          "response": []
        },
        {
          "name": "List Backups",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/resilience/backup?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["resilience", "backup"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Restore Backup",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/resilience/backup/backup-id/restore",
              "host": ["{{base_url}}"],
              "path": ["resilience", "backup", "backup-id", "restore"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "File Storage",
      "description": "File storage and management endpoints",
      "item": [
        {
          "name": "Get Storage Health",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/storage/health",
              "host": ["{{base_url}}"],
              "path": ["storage", "health"]
            }
          },
          "response": []
        },
        {
          "name": "Upload File",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "multipart/form-data"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/storage/upload",
              "host": ["{{base_url}}"],
              "path": ["storage", "upload"]
            }
          },
          "response": []
        },
        {
          "name": "List Files",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/storage/files",
              "host": ["{{base_url}}"],
              "path": ["storage", "files"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-refresh token if expired",
          "const token = pm.collectionVariables.get('access_token');",
          "if (token) {",
          "    try {",
          "        const payload = JSON.parse(atob(token.split('.')[1]));",
          "        const now = Math.floor(Date.now() / 1000);",
          "        if (payload.exp < now) {",
          "            console.log('Token expired, attempting refresh...');",
          "            // Could implement auto-refresh here",
          "        }",
          "    } catch (e) {",
          "        console.log('Invalid token format');",
          "    }",
          "}"
        ]
      }
    }
  ]
} 