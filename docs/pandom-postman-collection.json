{
	"info": {
		"_postman_id": "pandom-stack-api",
		"name": "Pandom Stack API",
		"description": "Complete API collection for Pandom Stack backend - Authentication, User Management, Security, Resilience & Administrative endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "pandom-stack"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\",\n  \"display_name\": \"{{display_name}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account. A verification OTP will be sent to the provided email address."
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Authenticate user and return JWT access and refresh tokens"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Refresh JWT access token using a valid refresh token"
					},
					"response": []
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Retrieve current authenticated user data and profile information"
					},
					"response": []
				},
				{
					"name": "Verify Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{verification_otp}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"verify"
							]
						},
						"description": "Verify email address using the 6-digit OTP code sent during registration"
					},
					"response": []
				},
				{
					"name": "Resend Verification Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/resend-verification",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"resend-verification"
							]
						},
						"description": "Resend email verification OTP to the specified email address"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"{{email}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/forgot-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"forgot-password"
							]
						},
						"description": "Send password reset OTP to the specified email address"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token\": \"{{reset_otp}}\",\n  \"password\": \"{{new_password}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/reset-password",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"reset-password"
							]
						},
						"description": "Reset password using the 6-digit OTP code sent via email"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, email verification, and password management"
		},
		{
			"name": "User Profile",
			"item": [
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"profile"
							]
						},
						"description": "Retrieve current user profile data including display name, tags, and metadata"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"display_name\": \"{{display_name}}\",\n  \"tags\": [\"{{tags}}\"],\n  \"metadata\": {\n    \"bio\": \"{{bio}}\",\n    \"location\": \"{{location}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"profile"
							]
						},
						"description": "Update user profile information including display name, tags, and custom metadata"
					},
					"response": []
				}
			],
			"description": "User profile management endpoints for retrieving and updating profile information"
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "Get Security Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/security/logs",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"security",
								"logs"
							]
						},
						"description": "Retrieve recent security activities and access logs for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Get User Sessions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/security/sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"security",
								"sessions"
							]
						},
						"description": "View active sessions and authentication tokens for the current user"
					},
					"response": []
				},
				{
					"name": "Download Personal Data",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/security/download-data",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"security",
								"download-data"
							]
						},
						"description": "Download personal data export in JSON format (GDPR compliance)"
					},
					"response": []
				},
				{
					"name": "Delete Account",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/security/delete-account",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"security",
								"delete-account"
							]
						},
						"description": "Permanently delete user account and all associated data (⚠️ Cannot delete last admin)"
					},
					"response": []
				}
			],
			"description": "Security and privacy management endpoints for user data control and account security"
		},
		{
			"name": "Resilience",
			"item": [
				{
					"name": "Get Resilience Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/resilience/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"resilience",
								"status"
							]
						},
						"description": "Check system resilience status including database connectivity and backup health"
					},
					"response": []
				},
				{
					"name": "Create Backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/resilience/backup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"resilience",
								"backup"
							]
						},
						"description": "Create a new database backup and store it in MinIO storage"
					},
					"response": []
				},
				{
					"name": "List Backups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/resilience/backup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"resilience",
								"backup"
							]
						},
						"description": "List all available database backups with metadata"
					},
					"response": []
				},
				{
					"name": "Restore Backup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/resilience/backup/{{backup_id}}/restore",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"resilience",
								"backup",
								"{{backup_id}}",
								"restore"
							]
						},
						"description": "Restore database from a specific backup (⚠️ This will overwrite current data)"
					},
					"response": []
				}
			],
			"description": "System resilience and backup management endpoints for data protection and recovery"
		},
		{
			"name": "Administration",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users?page={{page}}&limit={{limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Retrieve paginated list of all users (Admin only)"
					},
					"response": []
				},
				{
					"name": "Suspend User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{user_uuid}}/suspend",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{user_uuid}}",
								"suspend"
							]
						},
						"description": "Suspend a user account (Admin only)"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/users/{{user_uuid}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"users",
								"{{user_uuid}}"
							]
						},
						"description": "Permanently delete a user account (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get System Metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/metrics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"metrics"
							]
						},
						"description": "Retrieve system performance metrics and statistics (Admin only)"
					},
					"response": []
				},
				{
					"name": "Get Audit Logs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/admin/audit-logs?page={{page}}&limit={{limit}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"admin",
								"audit-logs"
							],
							"query": [
								{
									"key": "page",
									"value": "{{page}}"
								},
								{
									"key": "limit",
									"value": "{{limit}}"
								}
							]
						},
						"description": "Retrieve system audit logs for security monitoring (Admin only)"
					},
					"response": []
				}
			],
			"description": "Administrative endpoints for user management, system monitoring, and audit logging"
		},
		{
			"name": "Database Management",
			"item": [
				{
					"name": "Get Database Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/database/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"database",
								"status"
							]
						},
						"description": "Check database connection status and health"
					},
					"response": []
				},
				{
					"name": "Sync Database",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/database/sync",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"database",
								"sync"
							]
						},
						"description": "Synchronize database schema with entity definitions"
					},
					"response": []
				}
			],
			"description": "Database management and monitoring endpoints"
		},
		{
			"name": "Email Management",
			"item": [
				{
					"name": "Get Email Templates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/email/templates",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"email",
								"templates"
							]
						},
						"description": "Retrieve available email templates"
					},
					"response": []
				},
				{
					"name": "Test Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"to\": \"{{test_email}}\",\n  \"template\": \"verification\",\n  \"data\": {\n    \"otp\": \"123456\",\n    \"user_name\": \"{{test_display_name}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/email/test",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"email",
								"test"
							]
						},
						"description": "Send a test email using specified template"
					},
					"response": []
				},
				{
					"name": "Clear Email Cache",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{admin_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/email/clear-cache",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"email",
								"clear-cache"
							]
						},
						"description": "Clear email template cache"
					},
					"response": []
				}
			],
			"description": "Email template management and testing endpoints"
		}
	],
	"event": [
		{
			"listen": "test",
			"script": {
				"exec": [
					"// Auto-extract tokens from login responses",
					"if (pm.response.code === 200 || pm.response.code === 201) {",
					"    const response = pm.response.json();",
					"    ",
					"    // Extract access token",
					"    if (response.access_token) {",
					"        pm.environment.set('access_token', response.access_token);",
					"        console.log('Access token saved');",
					"    }",
					"    ",
					"    // Extract refresh token",
					"    if (response.refresh_token) {",
					"        pm.environment.set('refresh_token', response.refresh_token);",
					"        console.log('Refresh token saved');",
					"    }",
					"    ",
					"    // Extract user UUID",
					"    if (response.user && response.user.uuid) {",
					"        pm.environment.set('user_uuid', response.user.uuid);",
					"        console.log('User UUID saved');",
					"    }",
					"    ",
					"    // Extract backup ID",
					"    if (response.backup_id) {",
					"        pm.environment.set('backup_id', response.backup_id);",
					"        console.log('Backup ID saved');",
					"    }",
					"    ",
					"    // Extract download token",
					"    if (response.download_token) {",
					"        pm.environment.set('download_token', response.download_token);",
					"        console.log('Download token saved');",
					"    }",
					"}",
					"",
					"// Handle verification OTP from registration",
					"if (pm.request.url.path.includes('register') && pm.response.code === 201) {",
					"    const response = pm.response.json();",
					"    if (response.message && response.message.includes('OTP')) {",
					"        // Note: In real scenario, OTP would be sent via email",
					"        // For testing, you might need to check the email or logs",
					"        console.log('Registration successful. Check email for OTP.');",
					"    }",
					"}"
				],
				"type": "text/javascript"
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost",
			"type": "string"
		}
	]
} 